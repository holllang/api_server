name: Hollang CI/CD - Backend CI and CD with Docker & AWS EC2

on:
  push:
    branches: [ "develop" ]

permissions:
  contents: read

jobs:
  API-SERVER-CI-CD:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: .
    steps:
      # 소스코드 다운로드
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ./.gradle/caches
            ./.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Setting env files
        run: |
          mkdir env
          touch env/api_server.env
          echo "${{ secrets.API_SERVER_DEV_ENV }}" >> env/api_server.env
        shell: bash

      - name: aws configure
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR and setting deploy files, scripts
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hollang-spring
          DOCKER_CONTAINER_NAME: hollang-api-server-dev
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -f Dockerfile-dev .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          mkdir scripts
          touch scripts/stop_services.sh
          echo "docker rm -f $DOCKER_CONTAINER_NAME 2> /dev/null || true" >> scripts/stop_services.sh
          
          touch scripts/config_services.sh
          echo "aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin $ECR_REGISTRY" >> scripts/config_services.sh
          echo "docker pull $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> scripts/config_services.sh
          
          touch scripts/start_services.sh
          echo "docker run -p 80:80 --env-file=./env/api_server.env --network hollang-backend \
          -d --restart always --name $DOCKER_CONTAINER_NAME $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> scripts/start_services.sh

      - name: upload deploy files to AWS S3
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          zip -r api-app-codedeploy-$IMAGE_TAG.zip ./scripts ./env/api_server.env appspec.yml
          aws s3 cp --region ap-northeast-2 --acl private ./api-app-codedeploy-$IMAGE_TAG.zip s3://hollang-codedeploy/api_services/dev/

      - name: start deploy
        env:
          IMAGE_TAG: ${{ github.sha }}
        run: |
          aws deploy create-deployment --application-name HollangApplication \
          --deployment-config-name CodeDeployDefault.OneAtATime \
          --deployment-group-name develop \
          --s3-location bucket=hollang-codedeploy,bundleType=zip,key=api_services/dev/api-app-codedeploy-$IMAGE_TAG.zip